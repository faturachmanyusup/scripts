#!/bin/bash

_scripts_autocomplete() {
  # Entrypoint location
  local lib_path="/usr/local/lib/scripts"

  # Current word (currently being typed)
  local cur="${COMP_WORDS[COMP_CWORD]}"

  # Previous word (word before $cur)
  local prev="${COMP_WORDS[COMP_CWORD-1]}"

  # Get the list of providers (first argument suggestions)
  local providers=$(ls -1d "$lib_path"/*/ 2>/dev/null | xargs -n 1 basename)
  # Add uninstall and update commands to providers
  providers="$providers uninstall update"

  # Handle special case for uninstall command
  if [[ $COMP_CWORD -eq 2 && "$prev" == "uninstall" ]]; then
    # Provide flags for uninstall command
    COMPREPLY=( $(compgen -W "-v --verbose" -- "$cur") )
    return
  fi

  # Get the actions for the selected provider (second argument suggestions)
  if [[ $COMP_CWORD -eq 2 ]]
  then
    # If provider already typed and exists
    if [[ -d "$lib_path/$prev" ]]
    then
      # Store available actions under typed provider
      actions=$(ls -1 "$lib_path/$prev" | sed 's/\.sh$//')
    fi

    # Search actions that match $cur
    COMPREPLY=( $(compgen -W "$actions" -- "$cur") )

    return
  fi

  # Handle special case for gitlab mr-create command
  if [[ $COMP_CWORD -ge 3 && "${COMP_WORDS[1]}" == "gitlab" && "${COMP_WORDS[2]}" == "mr-create" ]]; then
    # Check if we're in a git repository
    if git rev-parse --is-inside-work-tree &>/dev/null; then
      # If previous word is -m, don't suggest branches (user is typing MR title)
      if [[ "$prev" == "-m" ]]; then
        return
      fi
      
      # If current word is -m or starts with -, suggest -m flag
      if [[ "$cur" == "-"* ]]; then
        COMPREPLY=( $(compgen -W "-m" -- "$cur") )
        return
      fi
      
      # For any other position, suggest both branches and -m flag
      local branches=$(git branch --format='%(refname:short)' 2>/dev/null)
      local suggestions="$branches -m"
      COMPREPLY=( $(compgen -W "$suggestions" -- "$cur") )
      return
    else
      # Not in a git repository, just suggest -m flag
      COMPREPLY=( $(compgen -W "-m" -- "$cur") )
      return
    fi
  fi

  # Default to suggesting providers
  COMPREPLY=( $(compgen -W "$providers" -- "$cur") )
}

# Register the completion function for the "scripts" command
complete -F _scripts_autocomplete scripts
