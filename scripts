#!/bin/bash

# declare colors
red='\033[0;31m'
default='\033[0m'
green='\033[0;32m'

# declare arguments as variables to make it clear
provider=$1
action=$2

# declare lib path
lib_path=/usr/local/lib/scripts

# Special case for uninstall command
if [ "$provider" = "uninstall" ]; then
  # Check if the script is run as root
  if [ "$(id -u)" -ne 0 ]; then
    printf "${red}Error: Uninstallation must be run as root.${default}\n"
    printf "hint: sudo scripts uninstall\n"
    exit 1
  fi
  
  # Execute uninstall script if it exists
  if [ -f "/usr/local/lib/scripts/uninstall.sh" ]; then
    bash /usr/local/lib/scripts/uninstall.sh "$@"
  else
    printf "${red}Error: Uninstall script not found.${default}\n"
    exit 1
  fi
  
  exit 0
fi

# Special case for update command
if [ "$provider" = "update" ]; then
  # Execute update script if it exists
  if [ -f "/usr/local/lib/scripts/update.sh" ]; then
    bash /usr/local/lib/scripts/update.sh "$@"
  else
    printf "${red}Error: Update script not found.${default}\n"
    exit 1
  fi
  
  exit 0
fi

# validate command
if [ -z "$provider" ] || [ -z "$action" ]
then
  printf "${red}Error: Invalid command.${default}\\n\\n"
  printf "Valid command:\\n"
  printf "scripts <provider> <action>\\n"
  printf "scripts uninstall [flags]\\n"
  printf "scripts update\\n"

  exit 2
fi

# validate first argument
folder_exists=$(find "$lib_path" -type d -name "$provider")
if [ -z "${folder_exists}" ]
then
  printf "${red}Error: Unknown argument $provider.${default}\\n\\n"
  printf "First argument should be one of these options:\\n"
  for dir in "$lib_path"/*/; do
    [ -d "$dir" ] && echo "- $(basename "$dir")"
  done
  printf "- uninstall\\n"
  printf "- update\\n"

  exit 2
fi

# validate second argument
file_exists=$(find $lib_path -name "$action.sh")
if [ -z "${file_exists}" ]
then
  printf "${red}Error: Unknown argument $action.${default}\\n\\n"
  printf "Second argument should be one of these options:\\n"
  for file in "$lib_path/$provider"/*.sh; do
    [ -f "$file" ] && echo "- $(basename "$file" .sh)"
  done

  exit 2
fi

# execute file
bash $lib_path/$provider/$action.sh "$@"

exit 0